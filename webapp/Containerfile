FROM ubuntu:24.04

# Define application required directories
ARG CODE_PATH="/opt/webapp/"
ARG PYENV_PATH="/opt/venv/"
ARG STATIC_PATH="/opt/static/"
ARG MEDIA_PATH="/opt/media/"
ARG BACKENDS_PATH="/opt/backends/"

# Create Directories inside the image
RUN mkdir ${CODE_PATH}
VOLUME ${CODE_PATH}
RUN mkdir ${STATIC_PATH}
VOLUME ${STATIC_PATH}
RUN mkdir ${MEDIA_PATH}
VOLUME ${MEDIA_PATH}
RUN mkdir ${BACKENDS_PATH}
VOLUME ${BACKENDS_PATH}

# Install Ubuntu Dependencies
RUN apt update && apt upgrade -y \
    && apt install -y python3 python3-pip python3-venv \
    netcat-traditional \
    # libsasl2-dev libldap2-dev libssl-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# # Libraries required to install python-ldap later if needed
# RUN apt install -y libsasl2-dev libldap2-dev libssl-dev
# # netcat to use nc and test connections # nc -z -v $HOST $PORT
# RUN apt install netcat-traditional

# Create the virtual environment
RUN python3 -m venv ${PYENV_PATH}

# Activate the virtual environment (important for subsequent commands)
ENV VIRTUAL_ENV=${PYENV_PATH}
ENV PATH="$VIRTUAL_ENV/bin:$PATH"
RUN pip install --upgrade pip

COPY ./requirements.txt requirements.txt
RUN pip install -r requirements.txt
RUN rm requirements.txt

ENV PYTHONUNBUFFERED 1
EXPOSE 8000

WORKDIR ${CODE_PATH}

# Command to run when the container starts
# Example:
# CMD ["gunicorn", "--bind", "0.0.0.0:8000", "your_app:app"] 
# Or for a simple test:
# CMD ["/opt/venv/bin/python", "-c", "print('Hello from your container!')"]
